error_log  logs/error.log;
access_log  logs/access.log;


worker_processes auto;
events
{
    worker_connections 1024;
}

http
{
    #Maps file name extensions to MIME types of responses
    include mime.types;
    default_type application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # Allow Server header to be altered
    proxy_pass_header Server;
    # Disable nginx version in Server header
    server_tokens off;
    # Only allow the site to be IFramed if same origing
    add_header X-Frame-Options SAMEORIGIN;
    # Follow content-type explicitly
    add_header X-Content-Type-Options nosniff;
    # Tell browser to detect xxs attacks, and block rendering if so
    add_header X-XSS-Protection "1; mode=block";
    # Allow default content security policy for self
    add_header Content-Security-Policy "default-src 'self';";
    # Instruct Flash and PDF files that they should only read the master crossdomain.xml file from the root of the website.
    add_header X-Permitted-Cross-Domain-Policies master-only;
    # Forces caches to submit the request to the origin server for validation before releasing a cached copy. The cache must verify the status of the stale resources before using it and expired ones should not be used.
    add_header Cache-Control "no-store, must-revalidate";
    # Backwards compatability with http/1.0 clients
    add_header Pragma no-cache;
    expires -1;
    # Disables buffering of responses from the proxied server
    proxy_buffering off;
    # Sets a timeout during which a keep-alive client connection will stay open on the server side
    keepalive_timeout 65;

    # Map function for websocket upgrade
    # map $http_upgrade $connection_upgrade
    # {
    #     default upgrade;
    #     ''      close;
    # }

    # Redirect none secured traffic
    server
    {
      listen 80;
      return 301 https://$host$request_uri;
    }
    
    server
    {
        # Server url
        server_name localhost # Server url;
        # Port
        listen 443;
        # SSL Config
        #include includes/ssl.conf;
        location /
        {
            proxy_set_header Host $host;
            # Client's IP
            proxy_set_header X-Real-IP $remote_addr;
            # Add Client IP through intermediary proxy hops
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Pass on protocol
            proxy_set_header X-Forwarded-Proto $scheme;
            # Specify http version
            proxy_http_version 1.1;
            # Pass to local resource;
    	    proxy_pass http://localhost:3030;
            # Sets the text that should be changed in the “Location” and “Refresh” header fields of a proxied server response. Turned off
            proxy_redirect off;
            # Limit the amount of stuff sent by the client
    	    client_max_body_size 200m;

            # Websocket
            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection $connection_upgrade;
        }
    }
    
}